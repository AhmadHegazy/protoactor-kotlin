// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Protos.proto

package actor.proto;

import actor.proto.mailbox.SystemMessage;
import com.google.protobuf.ByteString;
import com.google.protobuf.CodedInputStream;
import com.google.protobuf.CodedOutputStream;
import com.google.protobuf.Descriptors;
import com.google.protobuf.Descriptors.FieldDescriptor;
import com.google.protobuf.ExtensionRegistryLite;
import com.google.protobuf.GeneratedMessageV3;
import com.google.protobuf.InvalidProtocolBufferException;
import com.google.protobuf.MessageOrBuilder;
import com.google.protobuf.SingleFieldBuilderV3;
import com.google.protobuf.UnknownFieldSet;

@SuppressWarnings("ALL")
public final class Protos {
    private static final Descriptors.Descriptor
            internal_static_actor_PID_descriptor;
    private static final
    GeneratedMessageV3.FieldAccessorTable
            internal_static_actor_PID_fieldAccessorTable;
    private static final Descriptors.Descriptor
            internal_static_actor_PoisonPill_descriptor;
    private static final
    GeneratedMessageV3.FieldAccessorTable
            internal_static_actor_PoisonPill_fieldAccessorTable;
    private static final Descriptors.Descriptor
            internal_static_actor_Watch_descriptor;
    private static final
    GeneratedMessageV3.FieldAccessorTable
            internal_static_actor_Watch_fieldAccessorTable;
    private static final Descriptors.Descriptor
            internal_static_actor_Unwatch_descriptor;
    private static final
    GeneratedMessageV3.FieldAccessorTable
            internal_static_actor_Unwatch_fieldAccessorTable;
    private static final Descriptors.Descriptor
            internal_static_actor_Terminated_descriptor;
    private static final
    GeneratedMessageV3.FieldAccessorTable
            internal_static_actor_Terminated_fieldAccessorTable;
    private static final Descriptors.Descriptor
            internal_static_actor_Stop_descriptor;
    private static final
    GeneratedMessageV3.FieldAccessorTable
            internal_static_actor_Stop_fieldAccessorTable;
    private static Descriptors.FileDescriptor
            descriptor;

    static {
        String[] descriptorData = {
                "\n\014Protos.proto\022\005actor\"\"\n\003PID\022\017\n\007Address\030" +
                        "\001 \001(\t\022\n\n\002Id\030\002 \001(\t\"\014\n\nPoisonPill\"$\n\005Watch" +
                        "\022\033\n\007watcher\030\001 \001(\0132\n.actor.PID\"&\n\007Unwatch" +
                        "\022\033\n\007watcher\030\001 \001(\0132\n.actor.PID\"@\n\nTermina" +
                        "ted\022\027\n\003who\030\001 \001(\0132\n.actor.PID\022\031\n\021AddressT" +
                        "erminated\030\002 \001(\010\"\006\n\004StopB\025\n\013actor.proto\252\002" +
                        "\005Protob\006proto3"
        };
        Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
                new Descriptors.FileDescriptor.InternalDescriptorAssigner() {
                    public com.google.protobuf.ExtensionRegistry assignDescriptors(
                            Descriptors.FileDescriptor root) {
                        descriptor = root;
                        return null;
                    }
                };
        Descriptors.FileDescriptor
                .internalBuildGeneratedFileFrom(descriptorData,
                        new Descriptors.FileDescriptor[]{
                        }, assigner);
        internal_static_actor_PID_descriptor =
                getDescriptor().getMessageTypes().get(0);
        internal_static_actor_PID_fieldAccessorTable = new
                GeneratedMessageV3.FieldAccessorTable(
                internal_static_actor_PID_descriptor,
                new String[]{"Address", "Id",});
        internal_static_actor_PoisonPill_descriptor =
                getDescriptor().getMessageTypes().get(1);
        internal_static_actor_PoisonPill_fieldAccessorTable = new
                GeneratedMessageV3.FieldAccessorTable(
                internal_static_actor_PoisonPill_descriptor,
                new String[]{});
        internal_static_actor_Watch_descriptor =
                getDescriptor().getMessageTypes().get(2);
        internal_static_actor_Watch_fieldAccessorTable = new
                GeneratedMessageV3.FieldAccessorTable(
                internal_static_actor_Watch_descriptor,
                new String[]{"Watcher",});
        internal_static_actor_Unwatch_descriptor =
                getDescriptor().getMessageTypes().get(3);
        internal_static_actor_Unwatch_fieldAccessorTable = new
                GeneratedMessageV3.FieldAccessorTable(
                internal_static_actor_Unwatch_descriptor,
                new String[]{"Watcher",});
        internal_static_actor_Terminated_descriptor =
                getDescriptor().getMessageTypes().get(4);
        internal_static_actor_Terminated_fieldAccessorTable = new
                GeneratedMessageV3.FieldAccessorTable(
                internal_static_actor_Terminated_descriptor,
                new String[]{"Who", "AddressTerminated",});
        internal_static_actor_Stop_descriptor =
                getDescriptor().getMessageTypes().get(5);
        internal_static_actor_Stop_fieldAccessorTable = new
                GeneratedMessageV3.FieldAccessorTable(
                internal_static_actor_Stop_descriptor,
                new String[]{});
    }

    private Protos() {
    }

    public static void registerAllExtensions(
            ExtensionRegistryLite registry) {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistry registry) {
        registerAllExtensions(
                (ExtensionRegistryLite) registry);
    }

    public static Descriptors.FileDescriptor
    getDescriptor() {
        return descriptor;
    }

    public interface PIDOrBuilder extends
            // @@protoc_insertion_point(interface_extends:actor.PID)
            MessageOrBuilder {

        /**
         * <code>string Address = 1;</code>
         */
        String getAddress();

        /**
         * <code>string Address = 1;</code>
         */
        ByteString
        getAddressBytes();

        /**
         * <code>string Id = 2;</code>
         */
        String getId();

        /**
         * <code>string Id = 2;</code>
         */
        ByteString
        getIdBytes();
    }

    public interface PoisonPillOrBuilder extends
            // @@protoc_insertion_point(interface_extends:actor.PoisonPill)
            MessageOrBuilder {
    }

    public interface WatchOrBuilder extends
            // @@protoc_insertion_point(interface_extends:actor.Watch)
            MessageOrBuilder {

        /**
         * <code>.actor.PID watcher = 1;</code>
         */
        boolean hasWatcher();

        /**
         * <code>.actor.PID watcher = 1;</code>
         */
        PID getWatcher();

        /**
         * <code>.actor.PID watcher = 1;</code>
         */
        PIDOrBuilder getWatcherOrBuilder();
    }

    public interface UnwatchOrBuilder extends
            // @@protoc_insertion_point(interface_extends:actor.Unwatch)
            MessageOrBuilder {

        /**
         * <code>.actor.PID watcher = 1;</code>
         */
        boolean hasWatcher();

        /**
         * <code>.actor.PID watcher = 1;</code>
         */
        PID getWatcher();

        /**
         * <code>.actor.PID watcher = 1;</code>
         */
        PIDOrBuilder getWatcherOrBuilder();
    }

    public interface TerminatedOrBuilder extends
            // @@protoc_insertion_point(interface_extends:actor.Terminated)
            MessageOrBuilder {

        /**
         * <code>.actor.PID who = 1;</code>
         */
        boolean hasWho();

        /**
         * <code>.actor.PID who = 1;</code>
         */
        PID getWho();

        /**
         * <code>.actor.PID who = 1;</code>
         */
        PIDOrBuilder getWhoOrBuilder();

        /**
         * <code>bool AddressTerminated = 2;</code>
         */
        boolean getAddressTerminated();
    }

    public interface StopOrBuilder extends
            // @@protoc_insertion_point(interface_extends:actor.Stop)
            MessageOrBuilder {
    }

    /**
     * Protobuf type {@code actor.PID}
     */
    public static final class PID extends
            GeneratedMessageV3 implements
            SystemMessage,
            // @@protoc_insertion_point(message_implements:actor.PID)
            PIDOrBuilder {
        public static final int ADDRESS_FIELD_NUMBER = 1;
        public static final int ID_FIELD_NUMBER = 2;
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:actor.PID)
        private static final PID DEFAULT_INSTANCE;
        private static final com.google.protobuf.Parser<PID>
                PARSER = new com.google.protobuf.AbstractParser<PID>() {
            public PID parsePartialFrom(
                    CodedInputStream input,
                    ExtensionRegistryLite extensionRegistry)
                    throws InvalidProtocolBufferException {
                return new PID(input, extensionRegistry);
            }
        };

        static {
            DEFAULT_INSTANCE = new PID();
        }

        public volatile Process cachedProcess_ = null;
        private volatile Object address_;
        private volatile Object id_;
        private byte memoizedIsInitialized = -1;

        // Use PID.newBuilder() to construct.
        private PID(GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private PID() {
            address_ = "";
            id_ = "";
        }

        private PID(
                CodedInputStream input,
                ExtensionRegistryLite extensionRegistry)
                throws InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            String s = input.readStringRequireUtf8();

                            address_ = s;
                            break;
                        }
                        case 18: {
                            String s = input.readStringRequireUtf8();

                            id_ = s;
                            break;
                        }
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor
        getDescriptor() {
            return internal_static_actor_PID_descriptor;
        }

        public static PID parseFrom(
                java.nio.ByteBuffer data)
                throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static PID parseFrom(
                java.nio.ByteBuffer data,
                ExtensionRegistryLite extensionRegistry)
                throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static PID parseFrom(
                ByteString data)
                throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static PID parseFrom(
                ByteString data,
                ExtensionRegistryLite extensionRegistry)
                throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static PID parseFrom(byte[] data)
                throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static PID parseFrom(
                byte[] data,
                ExtensionRegistryLite extensionRegistry)
                throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static PID parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static PID parseFrom(
                java.io.InputStream input,
                ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static PID parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static PID parseDelimitedFrom(
                java.io.InputStream input,
                ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static PID parseFrom(
                CodedInputStream input)
                throws java.io.IOException {
            return GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static PID parseFrom(
                CodedInputStream input,
                ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(PID prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static PID getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<PID> parser() {
            return PARSER;
        }

        @java.lang.Override
        public final UnknownFieldSet
        getUnknownFields() {
            return UnknownFieldSet.getDefaultInstance();
        }

        protected GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return internal_static_actor_PID_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            PID.class, PID.Builder.class);
        }

        /**
         * <code>string Address = 1;</code>
         */
        public String getAddress() {
            Object ref = address_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                ByteString bs =
                        (ByteString) ref;
                String s = bs.toStringUtf8();
                address_ = s;
                return s;
            }
        }

        /**
         * <code>string Address = 1;</code>
         */
        public ByteString
        getAddressBytes() {
            Object ref = address_;
            if (ref instanceof String) {
                ByteString b =
                        ByteString.copyFromUtf8(
                                (String) ref);
                address_ = b;
                return b;
            } else {
                return (ByteString) ref;
            }
        }

        /**
         * <code>string Id = 2;</code>
         */
        public String getId() {
            Object ref = id_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                ByteString bs =
                        (ByteString) ref;
                String s = bs.toStringUtf8();
                id_ = s;
                return s;
            }
        }

        /**
         * <code>string Id = 2;</code>
         */
        public ByteString
        getIdBytes() {
            Object ref = id_;
            if (ref instanceof String) {
                ByteString b =
                        ByteString.copyFromUtf8(
                                (String) ref);
                id_ = b;
                return b;
            } else {
                return (ByteString) ref;
            }
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output)
                throws java.io.IOException {
            if (!getAddressBytes().isEmpty()) {
                GeneratedMessageV3.writeString(output, 1, address_);
            }
            if (!getIdBytes().isEmpty()) {
                GeneratedMessageV3.writeString(output, 2, id_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!getAddressBytes().isEmpty()) {
                size += GeneratedMessageV3.computeStringSize(1, address_);
            }
            if (!getIdBytes().isEmpty()) {
                size += GeneratedMessageV3.computeStringSize(2, id_);
            }
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof PID)) {
                return super.equals(obj);
            }
            PID other = (PID) obj;

            boolean result = true;
            result = result && getAddress()
                    .equals(other.getAddress());
            result = result && getId()
                    .equals(other.getId());
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + ADDRESS_FIELD_NUMBER;
            hash = (53 * hash) + getAddress().hashCode();
            hash = (37 * hash) + ID_FIELD_NUMBER;
            hash = (53 * hash) + getId().hashCode();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<PID> getParserForType() {
            return PARSER;
        }

        public PID getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * Protobuf type {@code actor.PID}
         */
        public static final class Builder extends
                GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:actor.PID)
                PIDOrBuilder {
            private Object address_ = "";
            private Object id_ = "";

            // Construct using actor.proto.Protos.PID.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final Descriptors.Descriptor
            getDescriptor() {
                return internal_static_actor_PID_descriptor;
            }

            protected GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return internal_static_actor_PID_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                PID.class, PID.Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                address_ = "";
                id_ = "";
                return this;
            }

            public Descriptors.Descriptor
            getDescriptorForType() {
                return internal_static_actor_PID_descriptor;
            }

            public PID getDefaultInstanceForType() {
                return PID.getDefaultInstance();
            }

            public PID build() {
                PID result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public PID buildPartial() {
                PID result = new PID(this);
                result.address_ = address_;
                result.id_ = id_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return super.clone();
            }

            public Builder setField(
                    FieldDescriptor field,
                    Object value) {
                return super.setField(field, value);
            }

            public Builder clearField(
                    FieldDescriptor field) {
                return super.clearField(field);
            }

            public Builder clearOneof(
                    Descriptors.OneofDescriptor oneof) {
                return super.clearOneof(oneof);
            }

            public Builder setRepeatedField(
                    FieldDescriptor field,
                    int index, Object value) {
                return super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(
                    FieldDescriptor field,
                    Object value) {
                return super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof PID) {
                    return mergeFrom((PID) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(PID other) {
                if (other == PID.getDefaultInstance()) return this;
                if (!other.getAddress().isEmpty()) {
                    address_ = other.address_;
                    onChanged();
                }
                if (!other.getId().isEmpty()) {
                    id_ = other.id_;
                    onChanged();
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    CodedInputStream input,
                    ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                PID parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PID) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <code>string Address = 1;</code>
             */
            public String getAddress() {
                Object ref = address_;
                if (!(ref instanceof String)) {
                    ByteString bs =
                            (ByteString) ref;
                    String s = bs.toStringUtf8();
                    address_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <code>string Address = 1;</code>
             */
            public Builder setAddress(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                address_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string Address = 1;</code>
             */
            public ByteString
            getAddressBytes() {
                Object ref = address_;
                if (ref instanceof String) {
                    ByteString b =
                            ByteString.copyFromUtf8(
                                    (String) ref);
                    address_ = b;
                    return b;
                } else {
                    return (ByteString) ref;
                }
            }

            /**
             * <code>string Address = 1;</code>
             */
            public Builder setAddressBytes(
                    ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                address_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string Address = 1;</code>
             */
            public Builder clearAddress() {

                address_ = getDefaultInstance().getAddress();
                onChanged();
                return this;
            }

            /**
             * <code>string Id = 2;</code>
             */
            public String getId() {
                Object ref = id_;
                if (!(ref instanceof String)) {
                    ByteString bs =
                            (ByteString) ref;
                    String s = bs.toStringUtf8();
                    id_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }

            /**
             * <code>string Id = 2;</code>
             */
            public Builder setId(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                id_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string Id = 2;</code>
             */
            public ByteString
            getIdBytes() {
                Object ref = id_;
                if (ref instanceof String) {
                    ByteString b =
                            ByteString.copyFromUtf8(
                                    (String) ref);
                    id_ = b;
                    return b;
                } else {
                    return (ByteString) ref;
                }
            }

            /**
             * <code>string Id = 2;</code>
             */
            public Builder setIdBytes(
                    ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                id_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string Id = 2;</code>
             */
            public Builder clearId() {

                id_ = getDefaultInstance().getId();
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(
                    final UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:actor.PID)
        }

    }

    /**
     * <pre>
     * user messages
     * </pre>
     * <p>
     * Protobuf type {@code actor.PoisonPill}
     */
    public static final class PoisonPill extends
            GeneratedMessageV3 implements
            SystemMessage,
            // @@protoc_insertion_point(message_implements:actor.PoisonPill)
            PoisonPillOrBuilder {
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:actor.PoisonPill)
        private static final PoisonPill DEFAULT_INSTANCE;
        private static final com.google.protobuf.Parser<PoisonPill>
                PARSER = new com.google.protobuf.AbstractParser<PoisonPill>() {
            public PoisonPill parsePartialFrom(
                    CodedInputStream input,
                    ExtensionRegistryLite extensionRegistry)
                    throws InvalidProtocolBufferException {
                return new PoisonPill(input, extensionRegistry);
            }
        };

        static {
            DEFAULT_INSTANCE = new PoisonPill();
        }

        private byte memoizedIsInitialized = -1;

        // Use PoisonPill.newBuilder() to construct.
        private PoisonPill(GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private PoisonPill() {
        }

        private PoisonPill(
                CodedInputStream input,
                ExtensionRegistryLite extensionRegistry)
                throws InvalidProtocolBufferException {
            this();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor
        getDescriptor() {
            return internal_static_actor_PoisonPill_descriptor;
        }

        public static PoisonPill parseFrom(
                java.nio.ByteBuffer data)
                throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static PoisonPill parseFrom(
                java.nio.ByteBuffer data,
                ExtensionRegistryLite extensionRegistry)
                throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static PoisonPill parseFrom(
                ByteString data)
                throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static PoisonPill parseFrom(
                ByteString data,
                ExtensionRegistryLite extensionRegistry)
                throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static PoisonPill parseFrom(byte[] data)
                throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static PoisonPill parseFrom(
                byte[] data,
                ExtensionRegistryLite extensionRegistry)
                throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static PoisonPill parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static PoisonPill parseFrom(
                java.io.InputStream input,
                ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static PoisonPill parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static PoisonPill parseDelimitedFrom(
                java.io.InputStream input,
                ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static PoisonPill parseFrom(
                CodedInputStream input)
                throws java.io.IOException {
            return GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static PoisonPill parseFrom(
                CodedInputStream input,
                ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(PoisonPill prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static PoisonPill getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<PoisonPill> parser() {
            return PARSER;
        }

        @java.lang.Override
        public final UnknownFieldSet
        getUnknownFields() {
            return UnknownFieldSet.getDefaultInstance();
        }

        protected GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return internal_static_actor_PoisonPill_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            PoisonPill.class, PoisonPill.Builder.class);
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output)
                throws java.io.IOException {
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof PoisonPill)) {
                return super.equals(obj);
            }
            PoisonPill other = (PoisonPill) obj;

            boolean result = true;
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<PoisonPill> getParserForType() {
            return PARSER;
        }

        public PoisonPill getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * <pre>
         * user messages
         * </pre>
         * <p>
         * Protobuf type {@code actor.PoisonPill}
         */
        public static final class Builder extends
                GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:actor.PoisonPill)
                PoisonPillOrBuilder {
            // Construct using actor.proto.Protos.PoisonPill.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final Descriptors.Descriptor
            getDescriptor() {
                return internal_static_actor_PoisonPill_descriptor;
            }

            protected GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return internal_static_actor_PoisonPill_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                PoisonPill.class, PoisonPill.Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                return this;
            }

            public Descriptors.Descriptor
            getDescriptorForType() {
                return internal_static_actor_PoisonPill_descriptor;
            }

            public PoisonPill getDefaultInstanceForType() {
                return PoisonPill.getDefaultInstance();
            }

            public PoisonPill build() {
                PoisonPill result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public PoisonPill buildPartial() {
                PoisonPill result = new PoisonPill(this);
                onBuilt();
                return result;
            }

            public Builder clone() {
                return super.clone();
            }

            public Builder setField(
                    FieldDescriptor field,
                    Object value) {
                return super.setField(field, value);
            }

            public Builder clearField(
                    FieldDescriptor field) {
                return super.clearField(field);
            }

            public Builder clearOneof(
                    Descriptors.OneofDescriptor oneof) {
                return super.clearOneof(oneof);
            }

            public Builder setRepeatedField(
                    FieldDescriptor field,
                    int index, Object value) {
                return super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(
                    FieldDescriptor field,
                    Object value) {
                return super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof PoisonPill) {
                    return mergeFrom((PoisonPill) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(PoisonPill other) {
                if (other == PoisonPill.getDefaultInstance()) return this;
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    CodedInputStream input,
                    ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                PoisonPill parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (PoisonPill) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            public final Builder setUnknownFields(
                    final UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:actor.PoisonPill)
        }

    }

    /**
     * <pre>
     * system messages
     * </pre>
     * <p>
     * Protobuf type {@code actor.Watch}
     */
    public static final class Watch extends
            GeneratedMessageV3 implements
            SystemMessage,
            // @@protoc_insertion_point(message_implements:actor.Watch)
            WatchOrBuilder {
        public static final int WATCHER_FIELD_NUMBER = 1;
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:actor.Watch)
        private static final Watch DEFAULT_INSTANCE;
        private static final com.google.protobuf.Parser<Watch>
                PARSER = new com.google.protobuf.AbstractParser<Watch>() {
            public Watch parsePartialFrom(
                    CodedInputStream input,
                    ExtensionRegistryLite extensionRegistry)
                    throws InvalidProtocolBufferException {
                return new Watch(input, extensionRegistry);
            }
        };

        static {
            DEFAULT_INSTANCE = new Watch();
        }

        private PID watcher_;
        private byte memoizedIsInitialized = -1;

        // Use Watch.newBuilder() to construct.
        private Watch(GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private Watch() {
        }

        private Watch(
                CodedInputStream input,
                ExtensionRegistryLite extensionRegistry)
                throws InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            PID.Builder subBuilder = null;
                            if (watcher_ != null) {
                                subBuilder = watcher_.toBuilder();
                            }
                            watcher_ = input.readMessage(PID.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(watcher_);
                                watcher_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor
        getDescriptor() {
            return internal_static_actor_Watch_descriptor;
        }

        public static Watch parseFrom(
                java.nio.ByteBuffer data)
                throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static Watch parseFrom(
                java.nio.ByteBuffer data,
                ExtensionRegistryLite extensionRegistry)
                throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Watch parseFrom(
                ByteString data)
                throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static Watch parseFrom(
                ByteString data,
                ExtensionRegistryLite extensionRegistry)
                throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Watch parseFrom(byte[] data)
                throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static Watch parseFrom(
                byte[] data,
                ExtensionRegistryLite extensionRegistry)
                throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Watch parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Watch parseFrom(
                java.io.InputStream input,
                ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Watch parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static Watch parseDelimitedFrom(
                java.io.InputStream input,
                ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static Watch parseFrom(
                CodedInputStream input)
                throws java.io.IOException {
            return GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Watch parseFrom(
                CodedInputStream input,
                ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(Watch prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static Watch getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<Watch> parser() {
            return PARSER;
        }

        @java.lang.Override
        public final UnknownFieldSet
        getUnknownFields() {
            return UnknownFieldSet.getDefaultInstance();
        }

        protected GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return internal_static_actor_Watch_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            Watch.class, Watch.Builder.class);
        }

        /**
         * <code>.actor.PID watcher = 1;</code>
         */
        public boolean hasWatcher() {
            return watcher_ != null;
        }

        /**
         * <code>.actor.PID watcher = 1;</code>
         */
        public PID getWatcher() {
            return watcher_ == null ? PID.getDefaultInstance() : watcher_;
        }

        /**
         * <code>.actor.PID watcher = 1;</code>
         */
        public PIDOrBuilder getWatcherOrBuilder() {
            return getWatcher();
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output)
                throws java.io.IOException {
            if (watcher_ != null) {
                output.writeMessage(1, getWatcher());
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (watcher_ != null) {
                size += CodedOutputStream
                        .computeMessageSize(1, getWatcher());
            }
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof Watch)) {
                return super.equals(obj);
            }
            Watch other = (Watch) obj;

            boolean result = true;
            result = result && (hasWatcher() == other.hasWatcher());
            if (hasWatcher()) {
                result = result && getWatcher()
                        .equals(other.getWatcher());
            }
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (hasWatcher()) {
                hash = (37 * hash) + WATCHER_FIELD_NUMBER;
                hash = (53 * hash) + getWatcher().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Watch> getParserForType() {
            return PARSER;
        }

        public Watch getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * <pre>
         * system messages
         * </pre>
         * <p>
         * Protobuf type {@code actor.Watch}
         */
        public static final class Builder extends
                GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:actor.Watch)
                WatchOrBuilder {
            private PID watcher_ = null;
            private SingleFieldBuilderV3<
                    actor.proto.Protos.PID, actor.proto.Protos.PID.Builder, actor.proto.Protos.PIDOrBuilder> watcherBuilder_;

            // Construct using actor.proto.Protos.Watch.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final Descriptors.Descriptor
            getDescriptor() {
                return internal_static_actor_Watch_descriptor;
            }

            protected GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return internal_static_actor_Watch_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                Watch.class, Watch.Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                if (watcherBuilder_ == null) {
                    watcher_ = null;
                } else {
                    watcher_ = null;
                    watcherBuilder_ = null;
                }
                return this;
            }

            public Descriptors.Descriptor
            getDescriptorForType() {
                return internal_static_actor_Watch_descriptor;
            }

            public Watch getDefaultInstanceForType() {
                return Watch.getDefaultInstance();
            }

            public Watch build() {
                Watch result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public Watch buildPartial() {
                Watch result = new Watch(this);
                if (watcherBuilder_ == null) {
                    result.watcher_ = watcher_;
                } else {
                    result.watcher_ = watcherBuilder_.build();
                }
                onBuilt();
                return result;
            }

            public Builder clone() {
                return super.clone();
            }

            public Builder setField(
                    FieldDescriptor field,
                    Object value) {
                return super.setField(field, value);
            }

            public Builder clearField(
                    FieldDescriptor field) {
                return super.clearField(field);
            }

            public Builder clearOneof(
                    Descriptors.OneofDescriptor oneof) {
                return super.clearOneof(oneof);
            }

            public Builder setRepeatedField(
                    FieldDescriptor field,
                    int index, Object value) {
                return super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(
                    FieldDescriptor field,
                    Object value) {
                return super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof Watch) {
                    return mergeFrom((Watch) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(Watch other) {
                if (other == Watch.getDefaultInstance()) return this;
                if (other.hasWatcher()) {
                    mergeWatcher(other.getWatcher());
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    CodedInputStream input,
                    ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                Watch parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (Watch) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <code>.actor.PID watcher = 1;</code>
             */
            public boolean hasWatcher() {
                return watcherBuilder_ != null || watcher_ != null;
            }

            /**
             * <code>.actor.PID watcher = 1;</code>
             */
            public PID getWatcher() {
                if (watcherBuilder_ == null) {
                    return watcher_ == null ? PID.getDefaultInstance() : watcher_;
                } else {
                    return watcherBuilder_.getMessage();
                }
            }

            /**
             * <code>.actor.PID watcher = 1;</code>
             */
            public Builder setWatcher(
                    PID.Builder builderForValue) {
                if (watcherBuilder_ == null) {
                    watcher_ = builderForValue.build();
                    onChanged();
                } else {
                    watcherBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }

            /**
             * <code>.actor.PID watcher = 1;</code>
             */
            public Builder setWatcher(PID value) {
                if (watcherBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    watcher_ = value;
                    onChanged();
                } else {
                    watcherBuilder_.setMessage(value);
                }

                return this;
            }

            /**
             * <code>.actor.PID watcher = 1;</code>
             */
            public Builder mergeWatcher(PID value) {
                if (watcherBuilder_ == null) {
                    if (watcher_ != null) {
                        watcher_ =
                                PID.newBuilder(watcher_).mergeFrom(value).buildPartial();
                    } else {
                        watcher_ = value;
                    }
                    onChanged();
                } else {
                    watcherBuilder_.mergeFrom(value);
                }

                return this;
            }

            /**
             * <code>.actor.PID watcher = 1;</code>
             */
            public Builder clearWatcher() {
                if (watcherBuilder_ == null) {
                    watcher_ = null;
                    onChanged();
                } else {
                    watcher_ = null;
                    watcherBuilder_ = null;
                }

                return this;
            }

            /**
             * <code>.actor.PID watcher = 1;</code>
             */
            public PID.Builder getWatcherBuilder() {

                onChanged();
                return getWatcherFieldBuilder().getBuilder();
            }

            /**
             * <code>.actor.PID watcher = 1;</code>
             */
            public PIDOrBuilder getWatcherOrBuilder() {
                if (watcherBuilder_ != null) {
                    return watcherBuilder_.getMessageOrBuilder();
                } else {
                    return watcher_ == null ?
                            PID.getDefaultInstance() : watcher_;
                }
            }

            /**
             * <code>.actor.PID watcher = 1;</code>
             */
            private SingleFieldBuilderV3<
                    actor.proto.Protos.PID, actor.proto.Protos.PID.Builder, actor.proto.Protos.PIDOrBuilder>
            getWatcherFieldBuilder() {
                if (watcherBuilder_ == null) {
                    watcherBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            actor.proto.Protos.PID, actor.proto.Protos.PID.Builder, actor.proto.Protos.PIDOrBuilder>(
                            getWatcher(),
                            getParentForChildren(),
                            isClean());
                    watcher_ = null;
                }
                return watcherBuilder_;
            }

            public final Builder setUnknownFields(
                    final UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:actor.Watch)
        }

    }

    /**
     * Protobuf type {@code actor.Unwatch}
     */
    public static final class Unwatch extends
            GeneratedMessageV3 implements
            SystemMessage,
            // @@protoc_insertion_point(message_implements:actor.Unwatch)
            UnwatchOrBuilder {
        public static final int WATCHER_FIELD_NUMBER = 1;
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:actor.Unwatch)
        private static final Unwatch DEFAULT_INSTANCE;
        private static final com.google.protobuf.Parser<Unwatch>
                PARSER = new com.google.protobuf.AbstractParser<Unwatch>() {
            public Unwatch parsePartialFrom(
                    CodedInputStream input,
                    ExtensionRegistryLite extensionRegistry)
                    throws InvalidProtocolBufferException {
                return new Unwatch(input, extensionRegistry);
            }
        };

        static {
            DEFAULT_INSTANCE = new Unwatch();
        }

        private PID watcher_;
        private byte memoizedIsInitialized = -1;

        // Use Unwatch.newBuilder() to construct.
        private Unwatch(GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private Unwatch() {
        }

        private Unwatch(
                CodedInputStream input,
                ExtensionRegistryLite extensionRegistry)
                throws InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            PID.Builder subBuilder = null;
                            if (watcher_ != null) {
                                subBuilder = watcher_.toBuilder();
                            }
                            watcher_ = input.readMessage(PID.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(watcher_);
                                watcher_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor
        getDescriptor() {
            return internal_static_actor_Unwatch_descriptor;
        }

        public static Unwatch parseFrom(
                java.nio.ByteBuffer data)
                throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static Unwatch parseFrom(
                java.nio.ByteBuffer data,
                ExtensionRegistryLite extensionRegistry)
                throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Unwatch parseFrom(
                ByteString data)
                throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static Unwatch parseFrom(
                ByteString data,
                ExtensionRegistryLite extensionRegistry)
                throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Unwatch parseFrom(byte[] data)
                throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static Unwatch parseFrom(
                byte[] data,
                ExtensionRegistryLite extensionRegistry)
                throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Unwatch parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Unwatch parseFrom(
                java.io.InputStream input,
                ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Unwatch parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static Unwatch parseDelimitedFrom(
                java.io.InputStream input,
                ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static Unwatch parseFrom(
                CodedInputStream input)
                throws java.io.IOException {
            return GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Unwatch parseFrom(
                CodedInputStream input,
                ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(Unwatch prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static Unwatch getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<Unwatch> parser() {
            return PARSER;
        }

        @java.lang.Override
        public final UnknownFieldSet
        getUnknownFields() {
            return UnknownFieldSet.getDefaultInstance();
        }

        protected GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return internal_static_actor_Unwatch_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            Unwatch.class, Unwatch.Builder.class);
        }

        /**
         * <code>.actor.PID watcher = 1;</code>
         */
        public boolean hasWatcher() {
            return watcher_ != null;
        }

        /**
         * <code>.actor.PID watcher = 1;</code>
         */
        public PID getWatcher() {
            return watcher_ == null ? PID.getDefaultInstance() : watcher_;
        }

        /**
         * <code>.actor.PID watcher = 1;</code>
         */
        public PIDOrBuilder getWatcherOrBuilder() {
            return getWatcher();
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output)
                throws java.io.IOException {
            if (watcher_ != null) {
                output.writeMessage(1, getWatcher());
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (watcher_ != null) {
                size += CodedOutputStream
                        .computeMessageSize(1, getWatcher());
            }
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof Unwatch)) {
                return super.equals(obj);
            }
            Unwatch other = (Unwatch) obj;

            boolean result = true;
            result = result && (hasWatcher() == other.hasWatcher());
            if (hasWatcher()) {
                result = result && getWatcher()
                        .equals(other.getWatcher());
            }
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (hasWatcher()) {
                hash = (37 * hash) + WATCHER_FIELD_NUMBER;
                hash = (53 * hash) + getWatcher().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Unwatch> getParserForType() {
            return PARSER;
        }

        public Unwatch getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * Protobuf type {@code actor.Unwatch}
         */
        public static final class Builder extends
                GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:actor.Unwatch)
                UnwatchOrBuilder {
            private PID watcher_ = null;
            private SingleFieldBuilderV3<
                    actor.proto.Protos.PID, actor.proto.Protos.PID.Builder, actor.proto.Protos.PIDOrBuilder> watcherBuilder_;

            // Construct using actor.proto.Protos.Unwatch.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final Descriptors.Descriptor
            getDescriptor() {
                return internal_static_actor_Unwatch_descriptor;
            }

            protected GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return internal_static_actor_Unwatch_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                Unwatch.class, Unwatch.Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                if (watcherBuilder_ == null) {
                    watcher_ = null;
                } else {
                    watcher_ = null;
                    watcherBuilder_ = null;
                }
                return this;
            }

            public Descriptors.Descriptor
            getDescriptorForType() {
                return internal_static_actor_Unwatch_descriptor;
            }

            public Unwatch getDefaultInstanceForType() {
                return Unwatch.getDefaultInstance();
            }

            public Unwatch build() {
                Unwatch result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public Unwatch buildPartial() {
                Unwatch result = new Unwatch(this);
                if (watcherBuilder_ == null) {
                    result.watcher_ = watcher_;
                } else {
                    result.watcher_ = watcherBuilder_.build();
                }
                onBuilt();
                return result;
            }

            public Builder clone() {
                return super.clone();
            }

            public Builder setField(
                    FieldDescriptor field,
                    Object value) {
                return super.setField(field, value);
            }

            public Builder clearField(
                    FieldDescriptor field) {
                return super.clearField(field);
            }

            public Builder clearOneof(
                    Descriptors.OneofDescriptor oneof) {
                return super.clearOneof(oneof);
            }

            public Builder setRepeatedField(
                    FieldDescriptor field,
                    int index, Object value) {
                return super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(
                    FieldDescriptor field,
                    Object value) {
                return super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof Unwatch) {
                    return mergeFrom((Unwatch) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(Unwatch other) {
                if (other == Unwatch.getDefaultInstance()) return this;
                if (other.hasWatcher()) {
                    mergeWatcher(other.getWatcher());
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    CodedInputStream input,
                    ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                Unwatch parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (Unwatch) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <code>.actor.PID watcher = 1;</code>
             */
            public boolean hasWatcher() {
                return watcherBuilder_ != null || watcher_ != null;
            }

            /**
             * <code>.actor.PID watcher = 1;</code>
             */
            public PID getWatcher() {
                if (watcherBuilder_ == null) {
                    return watcher_ == null ? PID.getDefaultInstance() : watcher_;
                } else {
                    return watcherBuilder_.getMessage();
                }
            }

            /**
             * <code>.actor.PID watcher = 1;</code>
             */
            public Builder setWatcher(
                    PID.Builder builderForValue) {
                if (watcherBuilder_ == null) {
                    watcher_ = builderForValue.build();
                    onChanged();
                } else {
                    watcherBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }

            /**
             * <code>.actor.PID watcher = 1;</code>
             */
            public Builder setWatcher(PID value) {
                if (watcherBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    watcher_ = value;
                    onChanged();
                } else {
                    watcherBuilder_.setMessage(value);
                }

                return this;
            }

            /**
             * <code>.actor.PID watcher = 1;</code>
             */
            public Builder mergeWatcher(PID value) {
                if (watcherBuilder_ == null) {
                    if (watcher_ != null) {
                        watcher_ =
                                PID.newBuilder(watcher_).mergeFrom(value).buildPartial();
                    } else {
                        watcher_ = value;
                    }
                    onChanged();
                } else {
                    watcherBuilder_.mergeFrom(value);
                }

                return this;
            }

            /**
             * <code>.actor.PID watcher = 1;</code>
             */
            public Builder clearWatcher() {
                if (watcherBuilder_ == null) {
                    watcher_ = null;
                    onChanged();
                } else {
                    watcher_ = null;
                    watcherBuilder_ = null;
                }

                return this;
            }

            /**
             * <code>.actor.PID watcher = 1;</code>
             */
            public PID.Builder getWatcherBuilder() {

                onChanged();
                return getWatcherFieldBuilder().getBuilder();
            }

            /**
             * <code>.actor.PID watcher = 1;</code>
             */
            public PIDOrBuilder getWatcherOrBuilder() {
                if (watcherBuilder_ != null) {
                    return watcherBuilder_.getMessageOrBuilder();
                } else {
                    return watcher_ == null ?
                            PID.getDefaultInstance() : watcher_;
                }
            }

            /**
             * <code>.actor.PID watcher = 1;</code>
             */
            private SingleFieldBuilderV3<
                    actor.proto.Protos.PID, actor.proto.Protos.PID.Builder, actor.proto.Protos.PIDOrBuilder>
            getWatcherFieldBuilder() {
                if (watcherBuilder_ == null) {
                    watcherBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            actor.proto.Protos.PID, actor.proto.Protos.PID.Builder, actor.proto.Protos.PIDOrBuilder>(
                            getWatcher(),
                            getParentForChildren(),
                            isClean());
                    watcher_ = null;
                }
                return watcherBuilder_;
            }

            public final Builder setUnknownFields(
                    final UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:actor.Unwatch)
        }

    }

    /**
     * Protobuf type {@code actor.Terminated}
     */
    public static final class Terminated
            extends
            GeneratedMessageV3
            implements SystemMessage,
            // @@protoc_insertion_point(message_implements:actor.Terminated)
            TerminatedOrBuilder {
        public static final int WHO_FIELD_NUMBER = 1;
        public static final int ADDRESSTERMINATED_FIELD_NUMBER = 2;
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:actor.Terminated)
        private static final Terminated DEFAULT_INSTANCE;
        private static final com.google.protobuf.Parser<Terminated>
                PARSER = new com.google.protobuf.AbstractParser<Terminated>() {
            public Terminated parsePartialFrom(
                    CodedInputStream input,
                    ExtensionRegistryLite extensionRegistry)
                    throws InvalidProtocolBufferException {
                return new Terminated(input, extensionRegistry);
            }
        };

        static {
            DEFAULT_INSTANCE = new Terminated();
        }

        private PID who_;
        private boolean addressTerminated_;
        private byte memoizedIsInitialized = -1;

        // Use Terminated.newBuilder() to construct.
        private Terminated(GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private Terminated() {
            addressTerminated_ = false;
        }

        private Terminated(
                CodedInputStream input,
                ExtensionRegistryLite extensionRegistry)
                throws InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            PID.Builder subBuilder = null;
                            if (who_ != null) {
                                subBuilder = who_.toBuilder();
                            }
                            who_ = input.readMessage(PID.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(who_);
                                who_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 16: {

                            addressTerminated_ = input.readBool();
                            break;
                        }
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor
        getDescriptor() {
            return internal_static_actor_Terminated_descriptor;
        }

        public static Terminated parseFrom(
                java.nio.ByteBuffer data)
                throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static Terminated parseFrom(
                java.nio.ByteBuffer data,
                ExtensionRegistryLite extensionRegistry)
                throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Terminated parseFrom(
                ByteString data)
                throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static Terminated parseFrom(
                ByteString data,
                ExtensionRegistryLite extensionRegistry)
                throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Terminated parseFrom(byte[] data)
                throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static Terminated parseFrom(
                byte[] data,
                ExtensionRegistryLite extensionRegistry)
                throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Terminated parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Terminated parseFrom(
                java.io.InputStream input,
                ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Terminated parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static Terminated parseDelimitedFrom(
                java.io.InputStream input,
                ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static Terminated parseFrom(
                CodedInputStream input)
                throws java.io.IOException {
            return GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Terminated parseFrom(
                CodedInputStream input,
                ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(Terminated prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static Terminated getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<Terminated> parser() {
            return PARSER;
        }

        @java.lang.Override
        public final UnknownFieldSet
        getUnknownFields() {
            return UnknownFieldSet.getDefaultInstance();
        }

        protected GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return internal_static_actor_Terminated_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            Terminated.class, Terminated.Builder.class);
        }

        /**
         * <code>.actor.PID who = 1;</code>
         */
        public boolean hasWho() {
            return who_ != null;
        }

        /**
         * <code>.actor.PID who = 1;</code>
         */
        public PID getWho() {
            return who_ == null ? PID.getDefaultInstance() : who_;
        }

        /**
         * <code>.actor.PID who = 1;</code>
         */
        public PIDOrBuilder getWhoOrBuilder() {
            return getWho();
        }

        /**
         * <code>bool AddressTerminated = 2;</code>
         */
        public boolean getAddressTerminated() {
            return addressTerminated_;
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output)
                throws java.io.IOException {
            if (who_ != null) {
                output.writeMessage(1, getWho());
            }
            if (addressTerminated_ != false) {
                output.writeBool(2, addressTerminated_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (who_ != null) {
                size += CodedOutputStream
                        .computeMessageSize(1, getWho());
            }
            if (addressTerminated_ != false) {
                size += CodedOutputStream
                        .computeBoolSize(2, addressTerminated_);
            }
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof Terminated)) {
                return super.equals(obj);
            }
            Terminated other = (Terminated) obj;

            boolean result = true;
            result = result && (hasWho() == other.hasWho());
            if (hasWho()) {
                result = result && getWho()
                        .equals(other.getWho());
            }
            result = result && (getAddressTerminated()
                    == other.getAddressTerminated());
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (hasWho()) {
                hash = (37 * hash) + WHO_FIELD_NUMBER;
                hash = (53 * hash) + getWho().hashCode();
            }
            hash = (37 * hash) + ADDRESSTERMINATED_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                    getAddressTerminated());
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Terminated> getParserForType() {
            return PARSER;
        }

        public Terminated getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * Protobuf type {@code actor.Terminated}
         */
        public static final class Builder extends
                GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:actor.Terminated)
                TerminatedOrBuilder {
            private PID who_ = null;
            private SingleFieldBuilderV3<
                    actor.proto.Protos.PID, actor.proto.Protos.PID.Builder, actor.proto.Protos.PIDOrBuilder> whoBuilder_;
            private boolean addressTerminated_;

            // Construct using actor.proto.Protos.Terminated.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final Descriptors.Descriptor
            getDescriptor() {
                return internal_static_actor_Terminated_descriptor;
            }

            protected GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return internal_static_actor_Terminated_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                Terminated.class, Terminated.Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                if (whoBuilder_ == null) {
                    who_ = null;
                } else {
                    who_ = null;
                    whoBuilder_ = null;
                }
                addressTerminated_ = false;

                return this;
            }

            public Descriptors.Descriptor
            getDescriptorForType() {
                return internal_static_actor_Terminated_descriptor;
            }

            public Terminated getDefaultInstanceForType() {
                return Terminated.getDefaultInstance();
            }

            public Terminated build() {
                Terminated result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public Terminated buildPartial() {
                Terminated result = new Terminated(this);
                if (whoBuilder_ == null) {
                    result.who_ = who_;
                } else {
                    result.who_ = whoBuilder_.build();
                }
                result.addressTerminated_ = addressTerminated_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return super.clone();
            }

            public Builder setField(
                    FieldDescriptor field,
                    Object value) {
                return super.setField(field, value);
            }

            public Builder clearField(
                    FieldDescriptor field) {
                return super.clearField(field);
            }

            public Builder clearOneof(
                    Descriptors.OneofDescriptor oneof) {
                return super.clearOneof(oneof);
            }

            public Builder setRepeatedField(
                    FieldDescriptor field,
                    int index, Object value) {
                return super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(
                    FieldDescriptor field,
                    Object value) {
                return super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof Terminated) {
                    return mergeFrom((Terminated) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(Terminated other) {
                if (other == Terminated.getDefaultInstance()) return this;
                if (other.hasWho()) {
                    mergeWho(other.getWho());
                }
                if (other.getAddressTerminated() != false) {
                    setAddressTerminated(other.getAddressTerminated());
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    CodedInputStream input,
                    ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                Terminated parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (Terminated) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <code>.actor.PID who = 1;</code>
             */
            public boolean hasWho() {
                return whoBuilder_ != null || who_ != null;
            }

            /**
             * <code>.actor.PID who = 1;</code>
             */
            public PID getWho() {
                if (whoBuilder_ == null) {
                    return who_ == null ? PID.getDefaultInstance() : who_;
                } else {
                    return whoBuilder_.getMessage();
                }
            }

            /**
             * <code>.actor.PID who = 1;</code>
             */
            public Builder setWho(
                    PID.Builder builderForValue) {
                if (whoBuilder_ == null) {
                    who_ = builderForValue.build();
                    onChanged();
                } else {
                    whoBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }

            /**
             * <code>.actor.PID who = 1;</code>
             */
            public Builder setWho(PID value) {
                if (whoBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    who_ = value;
                    onChanged();
                } else {
                    whoBuilder_.setMessage(value);
                }

                return this;
            }

            /**
             * <code>.actor.PID who = 1;</code>
             */
            public Builder mergeWho(PID value) {
                if (whoBuilder_ == null) {
                    if (who_ != null) {
                        who_ =
                                PID.newBuilder(who_).mergeFrom(value).buildPartial();
                    } else {
                        who_ = value;
                    }
                    onChanged();
                } else {
                    whoBuilder_.mergeFrom(value);
                }

                return this;
            }

            /**
             * <code>.actor.PID who = 1;</code>
             */
            public Builder clearWho() {
                if (whoBuilder_ == null) {
                    who_ = null;
                    onChanged();
                } else {
                    who_ = null;
                    whoBuilder_ = null;
                }

                return this;
            }

            /**
             * <code>.actor.PID who = 1;</code>
             */
            public PID.Builder getWhoBuilder() {

                onChanged();
                return getWhoFieldBuilder().getBuilder();
            }

            /**
             * <code>.actor.PID who = 1;</code>
             */
            public PIDOrBuilder getWhoOrBuilder() {
                if (whoBuilder_ != null) {
                    return whoBuilder_.getMessageOrBuilder();
                } else {
                    return who_ == null ?
                            PID.getDefaultInstance() : who_;
                }
            }

            /**
             * <code>.actor.PID who = 1;</code>
             */
            private SingleFieldBuilderV3<
                    actor.proto.Protos.PID, actor.proto.Protos.PID.Builder, actor.proto.Protos.PIDOrBuilder>
            getWhoFieldBuilder() {
                if (whoBuilder_ == null) {
                    whoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            actor.proto.Protos.PID, actor.proto.Protos.PID.Builder, actor.proto.Protos.PIDOrBuilder>(
                            getWho(),
                            getParentForChildren(),
                            isClean());
                    who_ = null;
                }
                return whoBuilder_;
            }

            /**
             * <code>bool AddressTerminated = 2;</code>
             */
            public boolean getAddressTerminated() {
                return addressTerminated_;
            }

            /**
             * <code>bool AddressTerminated = 2;</code>
             */
            public Builder setAddressTerminated(boolean value) {

                addressTerminated_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>bool AddressTerminated = 2;</code>
             */
            public Builder clearAddressTerminated() {

                addressTerminated_ = false;
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(
                    final UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:actor.Terminated)
        }

    }

    /**
     * Protobuf type {@code actor.Stop}
     */
    public static final class Stop extends
            GeneratedMessageV3 implements
            SystemMessage,
            // @@protoc_insertion_point(message_implements:actor.Stop)
            StopOrBuilder {
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:actor.Stop)
        private static final Stop DEFAULT_INSTANCE;
        private static final com.google.protobuf.Parser<Stop>
                PARSER = new com.google.protobuf.AbstractParser<Stop>() {
            public Stop parsePartialFrom(
                    CodedInputStream input,
                    ExtensionRegistryLite extensionRegistry)
                    throws InvalidProtocolBufferException {
                return new Stop(input, extensionRegistry);
            }
        };

        static {
            DEFAULT_INSTANCE = new Stop();
        }

        private byte memoizedIsInitialized = -1;

        // Use Stop.newBuilder() to construct.
        private Stop(GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private Stop() {
        }

        private Stop(
                CodedInputStream input,
                ExtensionRegistryLite extensionRegistry)
                throws InvalidProtocolBufferException {
            this();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }

        public static final Descriptors.Descriptor
        getDescriptor() {
            return internal_static_actor_Stop_descriptor;
        }

        public static Stop parseFrom(
                java.nio.ByteBuffer data)
                throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static Stop parseFrom(
                java.nio.ByteBuffer data,
                ExtensionRegistryLite extensionRegistry)
                throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Stop parseFrom(
                ByteString data)
                throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static Stop parseFrom(
                ByteString data,
                ExtensionRegistryLite extensionRegistry)
                throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Stop parseFrom(byte[] data)
                throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static Stop parseFrom(
                byte[] data,
                ExtensionRegistryLite extensionRegistry)
                throws InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Stop parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Stop parseFrom(
                java.io.InputStream input,
                ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Stop parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static Stop parseDelimitedFrom(
                java.io.InputStream input,
                ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static Stop parseFrom(
                CodedInputStream input)
                throws java.io.IOException {
            return GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Stop parseFrom(
                CodedInputStream input,
                ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(Stop prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static Stop getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<Stop> parser() {
            return PARSER;
        }

        @java.lang.Override
        public final UnknownFieldSet
        getUnknownFields() {
            return UnknownFieldSet.getDefaultInstance();
        }

        protected GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return internal_static_actor_Stop_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            Stop.class, Stop.Builder.class);
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(CodedOutputStream output)
                throws java.io.IOException {
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof Stop)) {
                return super.equals(obj);
            }
            Stop other = (Stop) obj;

            boolean result = true;
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Stop> getParserForType() {
            return PARSER;
        }

        public Stop getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * Protobuf type {@code actor.Stop}
         */
        public static final class Builder extends
                GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:actor.Stop)
                StopOrBuilder {
            // Construct using actor.proto.Protos.Stop.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final Descriptors.Descriptor
            getDescriptor() {
                return internal_static_actor_Stop_descriptor;
            }

            protected GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return internal_static_actor_Stop_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                Stop.class, Stop.Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                return this;
            }

            public Descriptors.Descriptor
            getDescriptorForType() {
                return internal_static_actor_Stop_descriptor;
            }

            public Stop getDefaultInstanceForType() {
                return Stop.getDefaultInstance();
            }

            public Stop build() {
                Stop result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public Stop buildPartial() {
                Stop result = new Stop(this);
                onBuilt();
                return result;
            }

            public Builder clone() {
                return super.clone();
            }

            public Builder setField(
                    FieldDescriptor field,
                    Object value) {
                return super.setField(field, value);
            }

            public Builder clearField(
                    FieldDescriptor field) {
                return super.clearField(field);
            }

            public Builder clearOneof(
                    Descriptors.OneofDescriptor oneof) {
                return super.clearOneof(oneof);
            }

            public Builder setRepeatedField(
                    FieldDescriptor field,
                    int index, Object value) {
                return super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(
                    FieldDescriptor field,
                    Object value) {
                return super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof Stop) {
                    return mergeFrom((Stop) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(Stop other) {
                if (other == Stop.getDefaultInstance()) return this;
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    CodedInputStream input,
                    ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                Stop parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (InvalidProtocolBufferException e) {
                    parsedMessage = (Stop) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            public final Builder setUnknownFields(
                    final UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:actor.Stop)
        }

    }

    // @@protoc_insertion_point(outer_class_scope)
}
